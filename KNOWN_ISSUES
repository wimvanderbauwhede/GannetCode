Known Issues for Gannet release 0.1

LAMBDA:

(let
 	(assign 'f (lambda ...))
	(apply (read 'f) ...)
)

does not work as the read call will fail because it's non-blocking. Instead, use either

(let
 	(assign 'f (lambda ...))
	'(apply (read 'f) ...)
)

or

 (let
 	'(assign 'f (lambda ...))
	'(apply (read 'f) ...)
)
or

(let
 	(assign 'f (lambda ...))
	(apply f ...)
)

RECURSIVEÂ LAMBDA:

The "canonical" way to do recursion with lambda functions is like this:

; Fact with accumulator
(let
	(assign 'fact
		(lambda 'n 'acc 'f_ '(if (< n '2)
			'(return acc)
			'(applytc (read f_) (- n '1) (* acc n) f_)
		)))
	'(apply (read 'fact) '5 '1 'fact)
) ; => 120





